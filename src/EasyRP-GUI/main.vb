Option Strict Off
Imports MaterialSkin

Public Class main

    Dim ConfigTemplate As String = "# This file is generated by EasyRP-GUI" & vbNewLine & "[Identifiers]" & vbNewLine & "ClientID={0}" & vbNewLine & "[State]" & vbNewLine & "State={1}" & vbNewLine & "Details={2}" & vbNewLine & "[Images]" & vbNewLine & "LargeImage={3}" & vbNewLine & "SmallImage={4}" & vbNewLine & "LargeImageTooltip={5}" & vbNewLine & "SmallImageTooltip={6}"
    Dim EasyRPPath = Application.StartupPath + "\core\"

    Sub AddLog(ByVal text)
        log.TxtLog.AppendText(text & vbNewLine)
    End Sub

    Dim p() As Process

    Sub loadConfig()
        Try
            Dim config = My.Computer.FileSystem.ReadAllText(EasyRPPath & "config.ini").Split(vbNewLine)
            Dim ConfigLineSplit
            For Each ConfigLine As String In config
                ConfigLineSplit = ConfigLine.Split("=")

                Select Case ConfigLineSplit(0).trim()
                    Case "ClientID"
                        TxtClientId.Text = ConfigLineSplit(1)
                    Case "State"
                        TxtState.Text = ConfigLineSplit(1)
                    Case "Details"
                        TxtDetails.Text = ConfigLineSplit(1)
                    Case "LargeImage"
                        TxtLargeAssetName.Text = ConfigLineSplit(1)
                    Case "SmallImage"
                        TxtSmallAssetName.Text = ConfigLineSplit(1)
                    Case "LargeImageTooltip"
                        TxtLargeAssetTooltip.Text = ConfigLineSplit(1)
                    Case "SmallImageTooltip"
                        TxtSmallAssetTooltip.Text = ConfigLineSplit(1)
                End Select
            Next
            AddLog("Configuration loaded!")
        Catch ex As Exception
            AddLog("Couldn't load configuration: " & vbNewLine & ex.ToString() & vbNewLine)
            MsgBox("Couldn't load configuration", MsgBoxStyle.Critical)
        End Try

    End Sub

    Sub StartRP()
        AddLog("Run EasyRP")

        Dim startInfo As New ProcessStartInfo(EasyRPPath & "run.bat")
        startInfo.WindowStyle = ProcessWindowStyle.Hidden

        Process.Start(startInfo)
    End Sub

    Sub CheckIfRunning()
        p = Process.GetProcessesByName("EasyRP")
        If p.Count > 0 Then
            AddLog("Close all EasyRP processes")
            For Each pe As Process In p
                pe.Kill()
            Next
            StartRP()
        Else
            StartRP()
        End If
    End Sub

    Private Sub main_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Dim SkinManager As MaterialSkinManager = MaterialSkinManager.Instance
        SkinManager.AddFormToManage(Me)
        SkinManager.Theme = MaterialSkinManager.Themes.LIGHT
        SkinManager.ColorScheme = New ColorScheme(Primary.BlueGrey800, Primary.BlueGrey900, Primary.BlueGrey500, Accent.LightBlue200, TextShade.WHITE)
        AddLog("Application started")
        AddLog("EasyRP path: " & EasyRPPath)
        CheckIfRunning()
        loadConfig()
    End Sub



    Private Sub BtnUpdateConfig_Click(sender As Object, e As EventArgs) Handles BtnUpdateConfig.Click

        Try
            Dim ConfigOutput = String.Format(ConfigTemplate, TxtClientId.Text, TxtState.Text, TxtDetails.Text, TxtLargeAssetName.Text, TxtSmallAssetName.Text, TxtLargeAssetTooltip.Text, TxtSmallAssetTooltip.Text)
            My.Computer.FileSystem.WriteAllText(EasyRPPath & "config.ini", ConfigOutput, False)
            AddLog("Config updated")
            MsgBox("Configuration updated succesfully!", MsgBoxStyle.Information)
        Catch ex As Exception
            AddLog("Config update error: " & vbNewLine & ex.ToString() & vbNewLine)
            MsgBox("Error while updating configuration! See log", MsgBoxStyle.Critical)
        End Try

    End Sub

    Private Sub BtnLog_Click(sender As Object, e As EventArgs) Handles BtnLog.Click
        log.Show()
    End Sub

    Private Sub BtnOpenMyApps_Click(sender As Object, e As EventArgs) Handles BtnOpenMyApps.Click
        Process.Start("https://discordapp.com/developers/applications/me")
    End Sub

    Private Sub BtnGithub_Click(sender As Object, e As EventArgs) Handles BtnGithub.Click
        Process.Start("https://github.com/0x4d48/EasyRP-GUI/")
    End Sub

    Private Sub main_FormClosing(sender As Object, e As FormClosingEventArgs) Handles MyBase.FormClosing
        AddLog("Close all EasyRP processes")
        For Each pe As Process In Process.GetProcessesByName("EasyRP")
            pe.Kill()
        Next
    End Sub

    Private Sub main_Resize(sender As Object, e As EventArgs) Handles MyBase.Resize
        If Me.WindowState = FormWindowState.Minimized Then
            If ChxHideInTray.Checked = True Then
                Me.Visible = False
                NotifyIcon.Visible = True

            End If
        End If
    End Sub

    Private Sub NotifyIcon_MouseClick(sender As Object, e As MouseEventArgs) Handles NotifyIcon.MouseClick
        Me.Visible = True
        NotifyIcon.Visible = False
        Me.WindowState = FormWindowState.Normal

    End Sub

    Private Sub BtnRestart_Click(sender As Object, e As EventArgs) Handles BtnRestart.Click
        AddLog("Rebooting")
        CheckIfRunning()
        loadConfig()
        MsgBox("Restarted Rich Presence", MsgBoxStyle.Information)
    End Sub
End Class